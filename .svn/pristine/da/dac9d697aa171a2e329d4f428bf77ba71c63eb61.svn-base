package com.projectwork.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;

import org.apache.log4j.Logger;

import com.projectwork.impl.sql.UnitServiceSQLIfc;

public class UnitServiceImpl extends DatabaseConnectionServiceImpl implements UnitServiceSQLIfc
{
    private static Logger logger = Logger.getLogger(UnitServiceImpl.class);
 
    /**
     * This method will add new company
     * 
     * @param String
     * @param String
     * @return boolean
     * @throws Exception
     */
    public boolean addNewUnit(String unitID, String unitName)
    {
        boolean isRecordInserted = false;
        PreparedStatement ps = null;
        int rs = 0;
        Connection con = null;
        Statement stmt = null;

        String sql = null;

        try
        {
            logger.info("UnitServiceImpl >> addNewUnit");
            
            con = getConnection();
            stmt = con.createStatement();

            sql = CREATE_UNIT_QUERY;
            ps = con.prepareStatement(sql);

            ps.setString(1, unitID);
            ps.setString(2, unitName);

            rs = ps.executeUpdate();

            if (rs == 1)
            {
                isRecordInserted = true;
                logger.info("Record for Unit inserted successfully.");
            }
            else
            {
                logger.info("Record for Unit could not be inserted.");
            }

        }

        catch (SQLException se)
        {
            logger.error("SQL Exception occured while adding new unit " + se.getMessage());
        }
        catch (Exception e)
        {
            logger.error("Exception occured while adding new unit" + e.getMessage());
        }
        
        finally
        {
            try
            {
                stmt.close();
                con.close();
            }
            catch (SQLException e)
            {
                logger.error("Exception in closing DB resources");
            }
        }
        return isRecordInserted;
    }
}

