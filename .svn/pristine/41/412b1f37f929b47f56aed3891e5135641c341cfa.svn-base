package com.projectwork.action;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts2.ServletActionContext;
import org.apache.struts2.interceptor.ServletRequestAware;

import com.google.gson.Gson;
import com.opensymphony.xwork2.ActionSupport;
import com.projectwork.bean.FeederBean;
import com.projectwork.bean.ParameterBean;
import com.projectwork.constants.TestProjectConstantsIfc;
import com.projectwork.impl.LoginServiceImpl;

public class TabForwardAction extends ActionSupport implements TestProjectConstantsIfc, ServletRequestAware
{
    private List<FeederBean> feederList = new ArrayList<FeederBean>();
    List<String> list = new ArrayList<String>();
    private List<ParameterBean> parameterList = new ArrayList<ParameterBean>();
    private List<String> feederListSearch = new ArrayList<String>();
    private HttpServletRequest request;
    private String feeder;
    private String feederName;
    private String parameterName;
    String json = null;
    
    public String execute() throws Exception

    {
        String forwardString = RETURN_LOGIN_ERROR;

        HttpSession session = request.getSession(false);
        if (session == null)
        {
            request.getSession().removeAttribute(USER_STATUS);
            return forwardString;
        }
        
       
       feederList = new LoginServiceImpl().getFeederData();
       
       for(int i=0; i<feederList.size(); i++)
       {
           feederListSearch.add(feederList.get(i).getFeeder());
       }

               
        System.out.println("Feeder name is "+ feederName);
/*        
        if(feederName != null)
        {
            parameterList = new LoginServiceImpl().getParameterData(feederName);
            System.out.println("Parameters associated are:");
            
            for(int i=0;i<parameterList.size();i++)
            {
                System.out.print(parameterList.get(i).getParameterName()+"\t");
            }
            json = new Gson().toJson(parameterList);
            
            HttpServletResponse response = ServletActionContext.getResponse();

            response.setContentType("application/json");
            response.getWriter().write(json);
            
        }*/
        
        String sportsName = request.getParameter("sportsName");
        
        if(sportsName!=null)
        {
            if (sportsName.equals("Football")) {
                list.add("Lionel Messi");
                list.add("Cristiano Ronaldo");
                list.add("David Beckham");
                list.add("Diego Maradona");
        } else if (sportsName.equals("Cricket")) {
                list.add("Sourav Ganguly");
                list.add("Sachin Tendulkar");
                list.add("Lance Klusener");
                list.add("Michael Bevan");
        } else if (sportsName.equals("Select Sports")) {
                list.add("Select Player");
        }

        json = new Gson().toJson(list);
        
        request.getSession().setAttribute("list", list);

        }
        
                
        request.getSession().setAttribute("feederList", feederList);
        

        return RETURN_SUCCESS;
    }

    public void setServletRequest(HttpServletRequest httpServletRequest)
    {
        this.request = httpServletRequest;
    }

    public List<FeederBean> getFeederList()
    {
        return feederList;
    }

    public void setFeederList(List<FeederBean> feederList)
    {
        this.feederList = feederList;
    }

    public List<ParameterBean> getParameterList()
    {
        return parameterList;
    }

    public void setParameterList(List<ParameterBean> parameterList)
    {
        this.parameterList = parameterList;
    }

    public String getFeeder()
    {
        return feeder;
    }

    public void setFeeder(String feeder)
    {
        this.feeder = feeder;
    }

    public String getFeederName()
    {
        return feederName;
    }

    public void setFeederName(String feederName)
    {
        this.feederName = feederName;
    }

    public String getParameterName()
    {
        return parameterName;
    }

    public void setParameterName(String parameterName)
    {
        this.parameterName = parameterName;
    }

    public List<String> getList()
    {
        return list;
    }

    public void setList(List<String> list)
    {
        this.list = list;
    }

    public List<String> getFeederListSearch()
    {
        return feederListSearch;
    }

    public void setFeederListSearch(List<String> feederListSearch)
    {
        this.feederListSearch = feederListSearch;
    }

}
