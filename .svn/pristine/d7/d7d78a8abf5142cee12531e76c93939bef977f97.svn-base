package com.projectwork.action.historicalreport;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.struts2.interceptor.ServletRequestAware;

import com.opensymphony.xwork2.ActionSupport;
import com.projectwork.bean.FeederBean;
import com.projectwork.bean.ParameterBean;
import com.projectwork.constants.TestProjectConstantsIfc;
import com.projectwork.impl.LoginServiceImpl;

public class HistoricalReportTabAction extends ActionSupport implements TestProjectConstantsIfc, ServletRequestAware
{
    private HttpServletRequest request;

    private String language1;
    private String language2;
 
    Map languageMap;

    private String feederName;
    private String parameterName;

    private List<FeederBean> feederList = new ArrayList<FeederBean>();
    private List<ParameterBean> parameterList = new ArrayList<ParameterBean>();
    private List<String> parameterNamesList = new ArrayList<String>();


    public String execute() throws Exception

    {
        String forwardString = RETURN_LOGIN_ERROR;

        HttpSession session = request.getSession(false);
        if (session == null)
        {
            request.getSession().removeAttribute(USER_STATUS);
            return forwardString;
        }

        feederList = new LoginServiceImpl().getFeederData();

        System.out.println("Feeder name is " + feederName);

        if (feederName != null)
        {
            parameterList = new LoginServiceImpl().getParameterData(feederName);
            System.out.println("Parameters associated are:");

            for (int i = 0; i < parameterList.size(); i++)
            {
                System.out.print(parameterList.get(i).getParameterName() + "\t");
                parameterNamesList.add(parameterList.get(i).getParameterName());
            }
        }
        
        
        languageMap =new HashMap();
        
        /*languageMap.put("Java", 
                new ArrayList<String>(Arrays.asList("Spring", "Hibernate", "Struts 2")));
        
        languageMap.put("Writer", 
                new ArrayList<String>(Arrays.asList("MSWord", "Kingsoft", "Open Office")));*/
        
        for(int i=0; i<feederList.size(); i++)
        {
            parameterList = new LoginServiceImpl().getParameterData(feederList.get(i).getFeeder());
            
            for(int j=0; j<parameterList.size(); j++)
            {
                parameterNamesList.add(parameterList.get(j).getParameterName());
            }
            
            languageMap.put(feederList.get(i).getFeeder(), new ArrayList<String>(parameterNamesList));
        }
        
        /*for(int i=0; i<feederList.size(); i++)
        {
            for(int j=0; j<parameterList.size(); j++)
            {
                languageMap.put(feederList.get(i).getFeeder(), new ArrayList<String>(parameterNamesList));
            }
        }*/
        
        
       
        return RETURN_SUCCESS;
    }

    public String getFeederName()
    {
        return feederName;
    }

    public void setFeederName(String feederName)
    {
        this.feederName = feederName;
    }

    public List<ParameterBean> getParameterList()
    {
        return parameterList;
    }

    public void setParameterList(List<ParameterBean> parameterList)
    {
        this.parameterList = parameterList;
    }


    public List<FeederBean> getFeederList()
    {
        return feederList;
    }

    public void setFeederList(List<FeederBean> feederList)
    {
        this.feederList = feederList;
    }

    public String getParameterName()
    {
        return parameterName;
    }

    public void setParameterName(String parameterName)
    {
        this.parameterName = parameterName;
    }

    public List<String> getParameterNamesList()
    {
        return parameterNamesList;
    }

    public void setParameterNamesList(List<String> parameterNamesList)
    {
        this.parameterNamesList = parameterNamesList;
    }
    
    public String getLanguage1() {
        return language1;
    }
    
    public void setLanguage1(String language1) {
        this.language1 = language1;
    }
 
    public String getLanguage2() {
        return language2;
    }
 
    public void setLanguage2(String language2) {
        this.language2 = language2;
    }
 
    public Map getLanguageMap() {
        return languageMap;
    }
 
    public void setLanguageMap(Map languageMap) {
        this.languageMap = languageMap;
    }

    public void setServletRequest(HttpServletRequest httpServletRequest)
    {
        this.request = httpServletRequest;
    }

}
