package com.projectwork.action;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.struts2.interceptor.ServletRequestAware;

import com.opensymphony.xwork2.ActionSupport;
import com.projectwork.bean.FeederBean;
import com.projectwork.constants.TestProjectConstantsIfc;
import com.projectwork.impl.CompanyServiceImpl;
import com.projectwork.impl.LoginServiceImpl;

public class LoginAction extends ActionSupport implements TestProjectConstantsIfc, ServletRequestAware
{
    private String userName;
    private String password;
    
    private List<FeederBean> feederList = new ArrayList<FeederBean>();
    private List<String> feederListSearch = new ArrayList<String>();
    private String feederName;

    private HttpServletRequest request;

    public String execute() throws Exception
    {

        LoginServiceImpl loginObject = new LoginServiceImpl();

        boolean isUserPresent = loginObject.validateLoginCredentials(userName, password);

        if (isUserPresent)
        {
            request.getSession().setAttribute(USER_STATUS, LOGGED_IN);
            request.getSession().setAttribute(USER_NAME, userName);
        }

        else if (userName.equals("admin") && password.equals("admin"))
        {
            request.getSession().setAttribute(USER_STATUS, LOGGED_IN);
            request.getSession().setAttribute(USER_NAME, userName);
            request.getSession().setAttribute(USER_TYPE, ADMINISTRATOR);
        }

        else
        {
            addActionError(getText("loginError.message"));
            return RETURN_ERROR;
        }
        
        int companyID = loginObject.getCompanyID(userName);
        
        String fullpath = request.getRealPath("") + "//" + "headerImage.png";
        CompanyServiceImpl companyServiceObject = new CompanyServiceImpl();
        
       // String tempFilePath = companyServiceObject.getCompanyLogo(companyID,fullpath);
       // request.getSession().setAttribute("tempFilePath", tempFilePath);
        request.getSession().setAttribute("fullpath", fullpath);
        
        feederList = new LoginServiceImpl().getFeederData();
        
        for(int i=0; i<feederList.size(); i++)
        {
            feederListSearch.add(feederList.get(i).getFeeder());
        }

        return RETURN_SUCCESS;
    }

    public String getUserName()
    {
        return userName;
    }

    public void setUserName(String userName)
    {
        this.userName = userName;
    }

    public String getPassword()
    {
        return password;
    }

    public void setPassword(String password)
    {
        this.password = password;
    }

    public void setServletRequest(HttpServletRequest httpServletRequest)
    {
        this.request = httpServletRequest;
    }
    
    public List<FeederBean> getFeederList()
    {
        return feederList;
    }

    public void setFeederList(List<FeederBean> feederList)
    {
        this.feederList = feederList;
    }

    public List<String> getFeederListSearch()
    {
        return feederListSearch;
    }

    public void setFeederListSearch(List<String> feederListSearch)
    {
        this.feederListSearch = feederListSearch;
    }

    public String getFeederName()
    {
        return feederName;
    }

    public void setFeederName(String feederName)
    {
        this.feederName = feederName;
    }

}